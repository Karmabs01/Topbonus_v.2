{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/utils/mailer.ts"],"sourcesContent":["// app/utils/mailer.ts\n\nimport nodemailer from 'nodemailer';\n\nconst transporter = nodemailer.createTransport({\n  host: process.env.SMTP_HOST, // Убедитесь, что здесь нет 'https://'\n  port: parseInt(process.env.SMTP_PORT || '465'),\n  secure: true, // Устанавливаем secure: true для порта 465\n  auth: {\n    user: process.env.SMTP_USER,\n    pass: process.env.SMTP_PASS,\n  },\n});\n\nexport const sendEmail = async (to: string, subject: string, text: string) => {\n  console.log(`Trying send email to ${to} with theme \"${subject}\"`);\n\n  const mailOptions = {\n    from: '\"Topbonus\" <admin@topbonus.com>', // Используйте разрешённый адрес\n    to,\n    subject,\n    text,\n  };\n\n  try {\n    const info = await transporter.sendMail(mailOptions);\n    console.log(`Email sent to ${to}`);\n    console.log('Info for letter:', info);\n  } catch (error) {\n    console.error(`Error sendding to ${to}:`, error);\n    throw error;\n  }\n};\n"],"names":[],"mappings":"AAAA,sBAAsB;;;;;;;AAItB,MAAM,cAAc,iJAAA,CAAA,UAAU,CAAC,eAAe,CAAC;IAC7C,MAAM,QAAQ,GAAG,CAAC,SAAS;IAC3B,MAAM,SAAS,QAAQ,GAAG,CAAC,SAAS,IAAI;IACxC,QAAQ;IACR,MAAM;QACJ,MAAM,QAAQ,GAAG,CAAC,SAAS;QAC3B,MAAM,QAAQ,GAAG,CAAC,SAAS;IAC7B;AACF;AAEO,MAAM,YAAY,OAAO,IAAY,SAAiB;IAC3D,QAAQ,GAAG,CAAC,CAAC,qBAAqB,EAAE,GAAG,aAAa,EAAE,QAAQ,CAAC,CAAC;IAEhE,MAAM,cAAc;QAClB,MAAM;QACN;QACA;QACA;IACF;IAEA,IAAI;QACF,MAAM,OAAO,MAAM,YAAY,QAAQ,CAAC;QACxC,QAAQ,GAAG,CAAC,CAAC,cAAc,EAAE,GAAG,CAAC;QACjC,QAAQ,GAAG,CAAC,oBAAoB;IAClC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,kBAAkB,EAAE,GAAG,CAAC,CAAC,EAAE;QAC1C,MAAM;IACR;AACF"}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/knexfile.ts"],"sourcesContent":["// /knexfile.ts\nimport type { Knex } from 'knex';\nimport dotenv from 'dotenv';\n\ndotenv.config({ path: '.env.local' });\n\nconst config: { [key: string]: Knex.Config } = {\n  development: {\n    client: 'mysql2',\n    connection: {\n      host: process.env.MYSQL_HOST,\n      user: process.env.MYSQL_USER,\n      password: process.env.MYSQL_PASSWORD,\n      database: process.env.MYSQL_DATABASE,\n    },\n    migrations: {\n      directory: './migrations',\n    },\n  },\n  production: {\n    client: 'mysql2',\n    connection: {\n      host: process.env.MYSQL_HOST, // Убедитесь, что эти переменные заданы в Vercel\n      user: process.env.MYSQL_USER,\n      password: process.env.MYSQL_PASSWORD,\n      database: process.env.MYSQL_DATABASE,\n    },\n    migrations: {\n      directory: './migrations',\n    },\n  },\n};\n\nexport default config;\n"],"names":[],"mappings":"AAAA,eAAe;;;;;;;AAIf,uIAAA,CAAA,UAAM,CAAC,MAAM,CAAC;IAAE,MAAM;AAAa;AAEnC,MAAM,SAAyC;IAC7C,aAAa;QACX,QAAQ;QACR,YAAY;YACV,MAAM,QAAQ,GAAG,CAAC,UAAU;YAC5B,MAAM,QAAQ,GAAG,CAAC,UAAU;YAC5B,UAAU,QAAQ,GAAG,CAAC,cAAc;YACpC,UAAU,QAAQ,GAAG,CAAC,cAAc;QACtC;QACA,YAAY;YACV,WAAW;QACb;IACF;IACA,YAAY;QACV,QAAQ;QACR,YAAY;YACV,MAAM,QAAQ,GAAG,CAAC,UAAU;YAC5B,MAAM,QAAQ,GAAG,CAAC,UAAU;YAC5B,UAAU,QAAQ,GAAG,CAAC,cAAc;YACpC,UAAU,QAAQ,GAAG,CAAC,cAAc;QACtC;QACA,YAAY;YACV,WAAW;QACb;IACF;AACF;uCAEe"}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/utils/db.ts"],"sourcesContent":["// app/utils/db.ts\n\nimport knex from 'knex';\nimport knexConfig from '../../knexfile'; // Убедитесь, что путь корректен\n\nconst environment = process.env.NODE_ENV || 'development';\nconst config = knexConfig[environment];\n\n// Используем глобальную переменную для предотвращения множественных подключений в режиме разработки\nconst db = (global as any).knexInstance || knex(config);\n\nif (process.env.NODE_ENV !== 'production') {\n  (global as any).knexInstance = db;\n}\n\nexport default db;\n"],"names":[],"mappings":"AAAA,kBAAkB;;;;;;;;;AAKlB,MAAM,cAAc,mDAAwB;AAC5C,MAAM,SAAS,0GAAA,CAAA,UAAU,CAAC,YAAY;AAEtC,oGAAoG;AACpG,MAAM,KAAK,AAAC,OAAe,YAAY,IAAI,CAAA,GAAA,8HAAA,CAAA,UAAI,AAAD,EAAE;AAEhD,wCAA2C;IACxC,OAAe,YAAY,GAAG;AACjC;uCAEe"}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/api/send-otp/route.ts"],"sourcesContent":["// app/api/send-otp/route.ts\n\nimport { NextResponse } from 'next/server';\nimport { sendEmail } from \"@/app/utils/mailer\"\nimport { v4 as uuidv4 } from 'uuid';\nimport db from '@/app/utils/db';\n\nexport async function POST(request: Request) {\n  try {\n    const { email } = await request.json();\n    console.log(`Received OTP request for email: ${email}`);\n\n    // Проверка email\n    if (!email || typeof email !== 'string') {\n      console.error('Invalid format:', email);\n      return NextResponse.json(\n        { success: false, message: 'Invalid format' },\n        { status: 400 }\n      );\n    }\n\n    // Генерация и сохранение OTP\n    const otpCode = Math.floor(100000 + Math.random() * 900000).toString(); // 6 цифр\n    const otpId = uuidv4();\n    const expiresAt = new Date(Date.now() + 5 * 60 * 1000); // 5 минут\n\n    await db('otps10').insert({\n      id: otpId,\n      email,\n      code: otpCode,\n      expires_at: expiresAt,\n    });\n\n    // Отправка OTP по электронной почте\n    await sendEmail(email, 'One-time code for topbon.us', `Your code for topbon.us: ${otpCode}`);\n\n    return NextResponse.json({ success: true, otpId });\n  } catch (error) {\n    console.error('Error processing send-otp request:', error);\n    return NextResponse.json(\n      { success: false, message: 'Failed to send OTP' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":"AAAA,4BAA4B;;;;;;;;;;;;;AAOrB,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,QAAQ,IAAI;QACpC,QAAQ,GAAG,CAAC,CAAC,gCAAgC,EAAE,MAAM,CAAC;QAEtD,iBAAiB;QACjB,IAAI,CAAC,SAAS,OAAO,UAAU,UAAU;YACvC,QAAQ,KAAK,CAAC,mBAAmB;YACjC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;gBAAO,SAAS;YAAiB,GAC5C;gBAAE,QAAQ;YAAI;QAElB;QAEA,6BAA6B;QAC7B,MAAM,UAAU,KAAK,KAAK,CAAC,SAAS,KAAK,MAAM,KAAK,QAAQ,QAAQ,IAAI,SAAS;QACjF,MAAM,QAAQ,CAAA,GAAA,oLAAA,CAAA,KAAM,AAAD;QACnB,MAAM,YAAY,IAAI,KAAK,KAAK,GAAG,KAAK,IAAI,KAAK,OAAO,UAAU;QAElE,MAAM,CAAA,GAAA,oHAAA,CAAA,UAAE,AAAD,EAAE,UAAU,MAAM,CAAC;YACxB,IAAI;YACJ;YACA,MAAM;YACN,YAAY;QACd;QAEA,oCAAoC;QACpC,MAAM,CAAA,GAAA,wHAAA,CAAA,YAAS,AAAD,EAAE,OAAO,+BAA+B,CAAC,yBAAyB,EAAE,QAAQ,CAAC;QAE3F,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM;QAAM;IAClD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sCAAsC;QACpD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,SAAS;QAAqB,GAChD;YAAE,QAAQ;QAAI;IAElB;AACF"}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}